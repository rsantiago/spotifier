/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package spotifier;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import static org.junit.Assert.assertTrue;

import java.util.Set;

import org.junit.Test;

import cashback.spotifier.Spotifier;
import cashbackDomain.album.Album;
import cashbackDomain.album.Genre;
import cashbackDomain.data.DataAccessInterface;
import cashbackDomain.objects.identity.Id;
import cashbackDomain.setup.CashbackConfig;

public class SpotifierTest {
    @Test public void testSpotifier() {
        CashbackConfig config = Spotifier.loadDataFromSpotifier(5, 5, CashbackConfig.buildMemmoryDBConfig());
        
        assertNotNull("Config criado", config);
        DataAccessInterface data = config.getData();
        
        assertNotNull("Store criada", data);
        
        Set<Id<Album>> albumIds = data.getAlbumIds();
        assertTrue("Há albums na loja", albumIds.size()>0);
        
        Set<Id<Genre>> genreIds = data.getGenreIds();
        assertTrue("Há gêneros na loja", genreIds.size()>0);
        
        Set<Genre> genres = data.getGenres(genreIds);
        
        int albumcount = 0;
        for (Genre genre : genres) {
        	Set<Id<Album>> thisGenreAlbumIds = genre.getAlbumIds();
        	
        	Set<Album> thisGenreAlbums = data.getAlbums(thisGenreAlbumIds);
        	for (Album album : thisGenreAlbums) {
        		assertNotNull("O gênero deste álbum está preenchido", album.getGenreId());
				assertEquals("O id do gênero neste álbum é o mesmo do gênero ao qual ele é afiliado", album.getGenreId(),(genre.getId()));
			}
        	
        	int thisGenreAlbumsCount = thisGenreAlbumIds.size();
        	albumcount+=thisGenreAlbumsCount;
		}
        
        assertTrue("Há albums nos gêneros", albumcount>0);        
    }
}
